using VkDynamicState = Silk.NET.Vulkan.DynamicState;

namespace Gfx;

public static class VulkanDynamicStateExtensions
{
	public static VkDynamicState ToVulkan(DynamicState state)
	{
		return state switch
		{
			DynamicState.Viewport                            => VkDynamicState.Viewport                           ,
			DynamicState.Scissor                             => VkDynamicState.Scissor                            ,
			DynamicState.LineWidth                           => VkDynamicState.LineWidth                          ,
			DynamicState.DepthBias                           => VkDynamicState.DepthBias                          ,
			DynamicState.BlendConstants                      => VkDynamicState.BlendConstants                     ,
			DynamicState.DepthBounds                         => VkDynamicState.DepthBounds                        ,
			DynamicState.StencilCompareMask                  => VkDynamicState.StencilCompareMask                 ,
			DynamicState.StencilWriteMask                    => VkDynamicState.StencilWriteMask                   ,
			DynamicState.StencilReference                    => VkDynamicState.StencilReference                   ,
			DynamicState.ViewportWScalingNV                  => VkDynamicState.ViewportWScalingNV                 ,
			DynamicState.DiscardRectangleExt                 => VkDynamicState.DiscardRectangleExt                ,
			DynamicState.DiscardRectangleEnableExt           => VkDynamicState.DiscardRectangleEnableExt          ,
			DynamicState.DiscardRectangleModeExt             => VkDynamicState.DiscardRectangleModeExt            ,
			DynamicState.SampleLocationsExt                  => VkDynamicState.SampleLocationsExt                 ,
			DynamicState.ViewportShadingRatePaletteNV        => VkDynamicState.ViewportShadingRatePaletteNV       ,
			DynamicState.ViewportCoarseSampleOrderNV         => VkDynamicState.ViewportCoarseSampleOrderNV        ,
			DynamicState.ExclusiveScissorEnableNV            => VkDynamicState.ExclusiveScissorEnableNV           ,
			DynamicState.ExclusiveScissorNV                  => VkDynamicState.ExclusiveScissorNV                 ,
			DynamicState.FragmentShadingRateKhr              => VkDynamicState.FragmentShadingRateKhr             ,
			DynamicState.LineStippleExt                      => VkDynamicState.LineStippleExt                     ,
			DynamicState.CullMode                            => VkDynamicState.CullMode                           ,
			DynamicState.FrontFace                           => VkDynamicState.FrontFace                          ,
			DynamicState.PrimitiveTopology                   => VkDynamicState.PrimitiveTopology                  ,
			DynamicState.ViewportWithCount                   => VkDynamicState.ViewportWithCount                  ,
			DynamicState.ScissorWithCount                    => VkDynamicState.ScissorWithCount                   ,
			DynamicState.VertexInputBindingStride            => VkDynamicState.VertexInputBindingStride           ,
			DynamicState.DepthTestEnable                     => VkDynamicState.DepthTestEnable                    ,
			DynamicState.DepthWriteEnable                    => VkDynamicState.DepthWriteEnable                   ,
			DynamicState.DepthCompareOp                      => VkDynamicState.DepthCompareOp                     ,
			DynamicState.DepthBoundsTestEnable               => VkDynamicState.DepthBoundsTestEnable              ,
			DynamicState.StencilTestEnable                   => VkDynamicState.StencilTestEnable                  ,
			DynamicState.StencilOp                           => VkDynamicState.StencilOp                          ,
			DynamicState.RayTracingPipelineStackSizeKhr      => VkDynamicState.RayTracingPipelineStackSizeKhr     ,
			DynamicState.VertexInputExt                      => VkDynamicState.VertexInputExt                     ,
			DynamicState.PatchControlPointsExt               => VkDynamicState.PatchControlPointsExt              ,
			DynamicState.RasterizerDiscardEnable             => VkDynamicState.RasterizerDiscardEnable            ,
			DynamicState.DepthBiasEnable                     => VkDynamicState.DepthBiasEnable                    ,
			DynamicState.LogicOpExt                          => VkDynamicState.LogicOpExt                         ,
			DynamicState.PrimitiveRestartEnable              => VkDynamicState.PrimitiveRestartEnable             ,
			DynamicState.ColorWriteEnableExt                 => VkDynamicState.ColorWriteEnableExt                ,
			DynamicState.TessellationDomainOriginExt         => VkDynamicState.TessellationDomainOriginExt        ,
			DynamicState.DepthClampEnableExt                 => VkDynamicState.DepthClampEnableExt                ,
			DynamicState.PolygonModeExt                      => VkDynamicState.PolygonModeExt                     ,
			DynamicState.RasterizationSamplesExt             => VkDynamicState.RasterizationSamplesExt            ,
			DynamicState.SampleMaskExt                       => VkDynamicState.SampleMaskExt                      ,
			DynamicState.AlphaToCoverageEnableExt            => VkDynamicState.AlphaToCoverageEnableExt           ,
			DynamicState.AlphaToOneEnableExt                 => VkDynamicState.AlphaToOneEnableExt                ,
			DynamicState.LogicOpEnableExt                    => VkDynamicState.LogicOpEnableExt                   ,
			DynamicState.ColorBlendEnableExt                 => VkDynamicState.ColorBlendEnableExt                ,
			DynamicState.ColorBlendEquationExt               => VkDynamicState.ColorBlendEquationExt              ,
			DynamicState.ColorWriteMaskExt                   => VkDynamicState.ColorWriteMaskExt                  ,
			DynamicState.RasterizationStreamExt              => VkDynamicState.RasterizationStreamExt             ,
			DynamicState.ConservativeRasterizationModeExt    => VkDynamicState.ConservativeRasterizationModeExt   ,
			DynamicState.ExtraPrimitiveOverestimationSizeExt => VkDynamicState.ExtraPrimitiveOverestimationSizeExt,
			DynamicState.DepthClipEnableExt                  => VkDynamicState.DepthClipEnableExt                 ,
			DynamicState.SampleLocationsEnableExt            => VkDynamicState.SampleLocationsEnableExt           ,
			DynamicState.ColorBlendAdvancedExt               => VkDynamicState.ColorBlendAdvancedExt              ,
			DynamicState.ProvokingVertexModeExt              => VkDynamicState.ProvokingVertexModeExt             ,
			DynamicState.LineRasterizationModeExt            => VkDynamicState.LineRasterizationModeExt           ,
			DynamicState.LineStippleEnableExt                => VkDynamicState.LineStippleEnableExt               ,
			DynamicState.DepthClipNegativeOneToOneExt        => VkDynamicState.DepthClipNegativeOneToOneExt       ,
			DynamicState.ViewportWScalingEnableNV            => VkDynamicState.ViewportWScalingEnableNV           ,
			DynamicState.ViewportSwizzleNV                   => VkDynamicState.ViewportSwizzleNV                  ,
			DynamicState.CoverageToColorEnableNV             => VkDynamicState.CoverageToColorEnableNV            ,
			DynamicState.CoverageToColorLocationNV           => VkDynamicState.CoverageToColorLocationNV          ,
			DynamicState.CoverageModulationModeNV            => VkDynamicState.CoverageModulationModeNV           ,
			DynamicState.CoverageModulationTableEnableNV     => VkDynamicState.CoverageModulationTableEnableNV    ,
			DynamicState.CoverageModulationTableNV           => VkDynamicState.CoverageModulationTableNV          ,
			DynamicState.ShadingRateImageEnableNV            => VkDynamicState.ShadingRateImageEnableNV           ,
			DynamicState.RepresentativeFragmentTestEnableNV  => VkDynamicState.RepresentativeFragmentTestEnableNV ,
			DynamicState.CoverageReductionModeNV             => VkDynamicState.CoverageReductionModeNV            ,
			DynamicState.AttachmentFeedbackLoopEnableExt     => VkDynamicState.AttachmentFeedbackLoopEnableExt    ,
			_                                                => throw new ArgumentOutOfRangeException(nameof(state), state, null)
		};
	}
}